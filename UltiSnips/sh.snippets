snippet red "colorize red"
\e[31m$1\e[0m$2
endsnippet

snippet green "colorize green"
\e[32m$1\e[0m$2
endsnippet

snippet cyan "colorize cyan"
\e[36m$1\e[0m$2
endsnippet

snippet blue "colorize blue"
\e[34m$1\e[0m$2
endsnippet

snippet purple "colorize purple"
\e[35m$1\e[0m$2
endsnippet

snippet gray "colorize gray"
\e[37m$1\e[0m$2
endsnippet

snippet bold "bold cli text"
\e[0m$1\e[0m$2
endsnippet

snippet underl "underlined cli text"
\e[4m$1\e[0m$2
endsnippet

snippet blink "blinking cli text"
\e[5m$1\e[0m$2
endsnippet

snippet rev "Reverse video characters in cli text"
\e[7m$1\e[0m$2
endsnippet

snippet head "header"
#!/bin/bash
################ HEADER ################
# 
# Skript-Name: 
# 
# Kurze Beschreibung:
# 
# 
#
# Autor: Philipp van Wickevoort Crommelin (parcIT)
#
############## HEADER END ##############
$0
endsnippet

# Visual Mode snippets {{{
snippet redv "colorize red"
\e[31m${VISUAL}\e[0m
endsnippet

snippet greenv "colorize green"
\e[32m${VISUAL}\e[0m
endsnippet

snippet cyanv "colorize cyan"
\e[36m${VISUAL}\e[0m
endsnippet

snippet bluev "colorize blue"
\e[34m${VISUAL}\e[0m
endsnippet

snippet purplev "colorize purple"
\e[35m${VISUAL}\e[0m
endsnippet

snippet grayv "colorize gray"
\e[37m${VISUAL}\e[0m
endsnippet

snippet boldv "bold cli text"
\e[1m${VISUAL}\e[0m
endsnippet

snippet underlv "underlined cli text"
\e[4m${VISUAL}\e[0m
endsnippet

snippet blinkv "blinking cli text"
\e[5m${VISUAL}\e[0m
endsnippet

snippet revv "Reverse video characters in cli text"
\e[7m${VISUAL}\e[0m
endsnippet

#}}}

snippet body "create skript body structure"

# Globale Bezeichner {{{
# Basisname und Pfad dieses Kommandozeilenskriptes
skriptName=$(basename \$0)
skriptPfad=$(whereis $skriptName | awk '{print \$2}')
# Verzeichnis fuer zusaetzliche Dateien, die
# das Programm benoetigt.
skriptRessourcen="$skriptPfad"_rsc 
}}}
# Kommandozeilenoptionen {{{
}}}
# Funktionsdefinitionen {{{
# error {{{
 error() {
  echo -e "[\e[91mERROR\e[0m] \$1"
  exit 1
} 
# }}}
# hilfe {{{
}}}
# }}}
# HAUPTPROGRAMM {{{

# Parse Optionen
# Ueberpruefe, ob Pfad zum Skript gefunden wurde
if [ -z $skriptPfad ]; then
  error "Das Skript: \e[35m$skriptPfad\e[0m konnte nicht gefunden werden."
fi

if [ $# == 0 ]; then
  hilfe
  exit 0
else
  while getopts 'hl:' OPTION; do
    case "$OPTION" in
      h) 
        hilfe
        exit 0
        ;;
      l)
        larg="$OPTARG"
        ;;
      *)
        error "Keine Option übergeben"
        ;;
    esac
  done
  if [ -z $larg ]; then
    echo -e "Kein Layout angegeben."
    echo -e "Shiny-Entwurfsmuster \e[35mnavbarPage\e[0m wird standardmäßig verwendet."
    larg="navbarPage"
  fi
  # Korrigiere Zaehler $# um die Anzahl der uebergebenen Optionen
  shift "$(($OPTIND -1))"

  # Parse Argumente
  if [ -z \$1 ]; then
    error "Bitte einen Pfadnamen angeben, unter dem das Shiny-Projekt mit dem Layout \e[35m$larg\e[0m angelegt werden soll."
  else
    appName=\$1
    infrastruktur $appName
  fi
fi

exit 0
# }}}
endsnippet
